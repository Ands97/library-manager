version: '3.8'
services:
  app:
    image: library-manager:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: library_manager-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - /var/www/vendor
      - /var/www/node_modules
    networks:
      - library_manager-network
  
  # frontend:
  #   image: node:22
  #   command: npm run dev
  #   working_dir: /var/www/
  #   volumes:
  #     - .:/var/www
  #   networks:
  #     - library_manager-network
  #   ports:
  #     - "5173:5173"
  #   environment:
  #     - HOST=0.0.0.0
  #     - APP_URL=http://localhost:8080

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./:/var/www
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf  
    networks:
      - library_manager-network
  
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: library_manager
      POSTGRES_USER: library_manager
      POSTGRES_PASSWORD: library_manager
    volumes:
      - ~/.docker-conf/library_manager/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - library_manager-network

  adminer:
    image: adminer
    restart: always
    networks:
      - library_manager-network
    ports:
      - 8081:8080

networks:
  library_manager-network:
    driver: bridge